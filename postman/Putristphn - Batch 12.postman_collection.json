{
	"info": {
		"_postman_id": "2698847c-fbc8-4eae-8e96-5f26abdc1cf8",
		"name": "Putristphn - Batch 12",
		"description": "#### üìã **Objective**\n\nThis Postman collection is created as part of the _Digital Skola QA Bootcamp Batch 12 - Session 6_ assignment.\n\nThe goal is to demonstrate basic **API testing skills** using **Postman** with the public API service [https://reqres.in/](https://null).\n\nIt includes practical examples of:\n\n- Sending different HTTP methods (GET, POST, PATCH, DELETE)\n    \n- Validating API responses with assertions\n    \n- Using Postman‚Äôs built-in scripting for test automation\n    \n\n#### ‚öôÔ∏è **Collection Contents**\n\nEach request includes **1 or more assertions** in the _Post-response_ tab to verify response status and data integrity.\n\n| No | Method | Endpoint | Description |\n| --- | --- | --- | --- |\n| 1 | GET | `/api/users/2` | Retrieve single user details |\n| 2 | POST | `/api/register` | Create or register a new user |\n| 3 | PATCH | `/api/users/2` | Update existing user details |\n| 4 | DELETE | `/api/users/2` | Delete a user |\n\n### ‚úÖ **Assertions Summary**\n\nEach request validates at least one of the following:\n\n- Correct **HTTP response status code** (`200`, `201`, or `204`)\n    \n- Expected **response body structure** and key fields\n    \n- **Data consistency** after update (PATCH) or creation (POST)\n    \n- Confirmation of **empty body** for DELETE request\n    \n\n### ‚öôÔ∏è **Technical Details**\n\n- All tests are written in **JavaScript** using Postman‚Äôs built-in `pm` library.\n    \n- Assertions use **ChaiJS BDD syntax** (`pm.expect`) for readability.\n    \n- Each test result can be viewed under the **‚ÄúTest Results‚Äù** tab after execution.\n    \n\n### üßëüèª‚Äçüíª **Created by**\n\n**Putri Stephanie Lesilolo**  \nQA Engineer Bootcamp ‚Äì Batch 12  \nDigital Skola",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49321753",
		"_collection_link": "https://putri-stephanie16-6602938.postman.co/workspace/f35e998c-a09c-4401-8684-187ea6ab4cca/collection/49321753-2698847c-fbc8-4eae-8e96-5f26abdc1cf8?action=share&source=collection_link&creator=49321753"
	},
	"item": [
		{
			"name": "GET ‚Äì Retrieve User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has user data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property(\"id\");",
							"    pm.expect(jsonData.data).to.have.property(\"email\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST ‚Äì Register User Successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains registered user info\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\", 4);",
							"    pm.expect(jsonData).to.have.property(\"token\", \"QpwL5tke4Pnpja7X4\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH - Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Job updated successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Job updated successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}