{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 1,
    "pending": 0,
    "failures": 3,
    "start": "2025-10-21T06:49:08.126Z",
    "end": "2025-10-21T06:49:08.896Z",
    "duration": 770,
    "testsRegistered": 4,
    "passPercent": 25,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3f59db88-0d93-4e92-b433-02ecb3a9230c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "998bd1f5-2611-45c2-b4c8-b6ee159b09d2",
          "title": "DELETE - Delete user",
          "fullFile": "/Users/putristphn/Documents/qa-engineer/digital-skola/APIAutomationReqres/tests/deleteUser.test.js",
          "file": "/tests/deleteUser.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should delete user successfully and return status 204",
              "fullTitle": "DELETE - Delete user should delete user successfully and return status 204",
              "timedOut": false,
              "duration": 303,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n  method: \"DELETE\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n  },\n  cache: \"no-store\"\n});\nexpect(response.status).to.equal(204);\nconst text = await response.text();\nexpect(text).to.equal(\"\");\nconsole.log(\"DELETE response body:\", text || \"<empty>\");",
              "err": {
                "message": "AssertionError: expected 401 to equal 204",
                "estack": "AssertionError: expected 401 to equal 204\n    at Context.<anonymous> (tests/deleteUser.test.js:15:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- 401\n+ 204\n"
              },
              "uuid": "b1016030-4da5-410b-baf4-5c10e20026db",
              "parentUUID": "998bd1f5-2611-45c2-b4c8-b6ee159b09d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b1016030-4da5-410b-baf4-5c10e20026db"
          ],
          "pending": [],
          "skipped": [],
          "duration": 303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "db04763f-8d72-4d0a-be5d-18548b9029e4",
          "title": "PATCH - Update user",
          "fullFile": "/Users/putristphn/Documents/qa-engineer/digital-skola/APIAutomationReqres/tests/patchUser.test.js",
          "file": "/tests/patchUser.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should update user job successfully",
              "fullTitle": "PATCH - Update user should update user job successfully",
              "timedOut": false,
              "duration": 213,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n  method: \"PATCH\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    name: \"morpheus\",\n    job: \"zion resident\"\n  })\n});\nconst data = await response.json();\nexpect(response.status).to.equal(200);\nexpect(data.name).to.equal(\"morpheus\");\nexpect(data.job).to.equal(\"zion resident\");\nexpect(data).to.have.property(\"updatedAt\");",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.<anonymous> (tests/patchUser.test.js:19:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "34f18c88-06de-4325-8f58-fa74f54db3a1",
              "parentUUID": "db04763f-8d72-4d0a-be5d-18548b9029e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "34f18c88-06de-4325-8f58-fa74f54db3a1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27200087-22ab-4dfc-94ae-e8d8d8992f2a",
          "title": "POST - Register user",
          "fullFile": "/Users/putristphn/Documents/qa-engineer/digital-skola/APIAutomationReqres/tests/registerUser.test.js",
          "file": "/tests/registerUser.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register a user successfully and return id & token",
              "fullTitle": "POST - Register user should register a user successfully and return id & token",
              "timedOut": false,
              "duration": 207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/register\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    email: \"eve.holt@reqres.in\",\n    password: \"pistol\"\n  })\n});\nconst data = await response.json();\nexpect(response.status).to.equal(200);\nexpect(data).to.have.property(\"id\");\nexpect(data).to.have.property(\"token\");",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.<anonymous> (tests/registerUser.test.js:19:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "9354dffb-c073-491c-b9e3-f44136a66918",
              "parentUUID": "27200087-22ab-4dfc-94ae-e8d8d8992f2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9354dffb-c073-491c-b9e3-f44136a66918"
          ],
          "pending": [],
          "skipped": [],
          "duration": 207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a190a720-7b8d-4611-9812-59daf0722675",
          "title": "GET - Retrieve user",
          "fullFile": "/Users/putristphn/Documents/qa-engineer/digital-skola/APIAutomationReqres/tests/retrieveUser.test.js",
          "file": "/tests/retrieveUser.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return user data with status 200",
              "fullTitle": "GET - Retrieve user should return user data with status 200",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\");\nconst data = await response.json();\nexpect(response.status).to.equal(200);\nexpect(data.data).to.have.property(\"id\");\nexpect(data.data).to.have.property(\"email\");",
              "err": {},
              "uuid": "b06f44b5-5bd0-42ea-b975-03ca35a6ba78",
              "parentUUID": "a190a720-7b8d-4611-9812-59daf0722675",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b06f44b5-5bd0-42ea-b975-03ca35a6ba78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.4"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}